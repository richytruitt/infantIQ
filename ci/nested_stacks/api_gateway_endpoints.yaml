AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31


Parameters:
  S3Bucket:
    Type: String
  CodeCommitSHA:
    Type: String
    Description: All backend API endpoints


Resources:


  JWTSecret:
    Type: AWS::SecretsManager::Secret
    Properties:
      Name: JWTSecret
      Description: Simple secret created by AWS CloudFormation.
      SecretString: '{"secret_key":"secretKey"}'
 
  # ========== Base API Gateway ==========
  APIGateway:
    Type: AWS::ApiGateway::RestApi
    Properties:
      Description: API Gateway for lambda functions
      EndpointConfiguration:
        Types:
          - REGIONAL
      Name: infantIQApi


  #  ========== Definition of resources ==========
  ApiGatewayBasePath:
      Type: AWS::ApiGateway::Resource
      Properties:
        RestApiId: !Ref APIGateway
        ParentId: !GetAtt APIGateway.RootResourceId
        PathPart: api


  GetDataResource:
    Type: AWS::ApiGateway::Resource
    Properties:
      RestApiId: !Ref APIGateway
      ParentId: !Ref ApiGatewayBasePath
      PathPart: getData



  #  ========== Definition of resource methods ==========
  GetDataMethod:
    Type: AWS::ApiGateway::Method
    Properties:
      AuthorizationType: NONE
      HttpMethod: GET
      Integration:
        IntegrationHttpMethod: POST
        Credentials: !GetAtt APIGatewayIamRole.Arn
        Type: AWS_PROXY
        Uri: !Sub
          - arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${lambdaArn}/invocations
          - lambdaArn: !GetAtt GetDataLambda.Arn
      MethodResponses:
        - StatusCode: 200
          ResponseModels:
            application/json: Empty


      ResourceId: !Ref GetDataResource
      RestApiId: !Ref APIGateway


  #  ========== invocation permissions ==========
  GeDataInvoke:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !GetAtt GetDataLambda.Arn
      Principal: apigateway.amazonaws.com



  #  ========== Deployment definition ==========
  APIGatewayDeployment:
    Type: AWS::ApiGateway::Deployment
    DependsOn:
      - GetDataMethod
    Properties:
      RestApiId: !Ref APIGateway
      StageName: LambdaAPIGatewayDeployment


  #  ========== Permissions for the API Gateway to invoke ==========
  APIGatewayIamRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Sid: ''
            Effect: Allow
            Principal:
              Service:
                - apigateway.amazonaws.com
            Action:
              - sts:AssumeRole
      Path: /
      Policies:
        - PolicyName: LambdaAccess
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action: lambda:*
                Resource: !GetAtt GetDataLambda.Arn

  #  ========== Role and policy for lambda functions ==========
  APIRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - sts:AssumeRole
      Policies:
        - PolicyName: ApiPolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                  - timestream:*
                  - iot:*
                  - dynamodb:Query
                  - dynamodb:UpdateItem
                  - kms:DescribeKey
                  - kms:CreateGrant
                  - kms:Decrypt
                  - dbqms:CreateFavoriteQuery
                  - dbqms:DescribeFavoriteQueries
                  - dbqms:UpdateFavoriteQuery
                  - dbqms:DeleteFavoriteQueries
                  - dbqms:GetQueryString
                  - dbqms:CreateQueryHistory
                  - dbqms:UpdateQueryHistory
                  - dbqms:DeleteQueryHistory
                  - dbqms:DescribeQueryHistory
                  - s3:ListAllMyBuckets
                  - rds:DescribeDBInstances
                  - rds:DescribeDBClusters
                  - rds-data:ExecuteStatement
                  - tag:GetResources
                  - secretsmanager:ListSecrets
                  - secretsmanager:GetSecretValue
                Resource: '*'


  #  ========== API Lambda function definitions ==========
  GetDataLambda:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket: !Ref S3Bucket
        S3Key: !Join
          - ''
          - - release/
            - getInfantIQData
            - '-'
            - !Ref CodeCommitSHA
            - .zip
      Description: Lambda for returning all infantIQDatas
      FunctionName: GetInfantIQData
      Handler: main.lambda_handler
      MemorySize: 128
      Role: !GetAtt APIRole.Arn
      Runtime: python3.12
      Timeout: 100


  
Outputs:
  APIGEndpoint:
    Description: "API endpoint"
    Value: !Sub "${APIGateway}.execute-api.${AWS::Region}.amazonaws.com"

